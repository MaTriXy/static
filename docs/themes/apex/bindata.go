// Code generated by go-bindata.
// sources:
// files/css/index.css
// files/js/index.js
// files/js/smoothscroll.js
// files/views/index.html
// DO NOT EDIT!

package apex

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cssIndexCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x6d\x6f\xdb\x36\x10\xfe\x9e\x5f\x41\x38\x28\x90\x6c\x96\x20\xd9\xb1\xeb\x2a\x40\xb1\xae\x4d\xd0\x7d\xe8\x56\x2c\x2b\xb6\xaf\x94\x44\xdb\x5c\x28\x51\xa0\xa8\xbc\x74\xe8\x7f\xdf\x91\x47\xca\x94\x25\x37\x28\x8a\xc2\xd2\x91\xf7\xf6\xdc\xc3\x3b\x2a\x99\x92\x52\x93\xff\xce\x08\x89\x22\x46\x5b\x96\x91\xa2\xcb\x79\x11\xe5\xec\x2b\x67\xea\x22\xde\x2c\xe6\x24\x99\x93\x38\x85\xdf\xf4\xf2\xda\xee\x7b\xe4\xa5\xde\x67\x64\x93\x24\xcd\x13\x4a\xf6\x8c\x96\x4c\xc1\x0f\xdf\xed\x75\x46\xae\x70\xc5\x2e\x69\x45\x8b\x7b\x5e\xef\x32\x92\xc4\xc9\x4a\xb1\xea\x7a\x20\x8e\x2a\x56\xf2\xae\x32\xab\x13\x8b\x82\xaa\x1d\x33\x6b\x1b\xbb\x66\x17\x4b\xaa\xee\x33\x72\x9e\x24\x09\x6e\xce\x45\x07\x5b\xce\x97\xcb\x77\x6f\x6e\x6f\x51\x24\x4c\x18\xd1\x4e\xd1\x67\x58\xd8\x52\xf3\xcf\x29\xe7\x3b\x23\xd9\x6e\x71\xdf\xd6\xbc\x6d\xd6\x9b\x9b\x37\x6b\x2f\xf0\xe6\x17\xe9\x62\xb5\x78\xe3\xb4\x5a\x26\x58\xa1\xb9\xac\xad\xfe\x03\x55\x17\xe8\xd6\xe1\x71\x58\x36\x06\x1f\xf7\x5c\xb3\xeb\xb3\x6f\x67\x67\x3f\x59\x5c\x73\xf9\x14\xb5\xfc\xab\x85\x20\x97\xca\xe0\x04\x22\xbb\x61\xaf\x2b\x31\x07\x61\xf9\x6c\x77\x6e\x65\xad\xa3\x2d\xad\xb8\x80\xb8\x23\xda\x34\x82\x45\xed\x73\xab\x59\x35\x27\xbf\x0a\x5e\xdf\x7f\xa2\xc5\x9d\x7d\xbf\x85\x9d\x73\xd0\x20\x64\x76\xc7\x76\x92\x91\x2f\xbf\xcd\xe6\x64\xf6\xa7\xcc\xa5\x96\xe6\xe9\x8f\xa7\xe7\x1d\xab\x67\x6e\xcf\x97\xbc\xab\x75\x67\xe4\xef\x69\xad\xa9\x62\x42\x98\x97\x5b\xae\x28\xb9\xa3\x75\xeb\xf7\x7d\x50\x92\x97\x4e\x42\x66\x1f\x99\x78\x60\x9a\x17\x94\xfc\xce\x3a\x06\x92\x16\x16\x20\x59\xc5\x11\xbe\x47\x96\xdf\x73\x08\xd8\x44\xdd\x56\x40\xa3\xbd\xcd\x11\x3c\x70\x2a\x38\x70\xa9\xbc\xf6\x49\x41\xfe\x50\xa3\x74\x8d\x7c\xb1\xa2\x47\xc7\x95\x25\xd6\x31\x87\x8a\xef\x94\xec\xea\xb2\x07\x78\x67\xe1\x2d\xa4\x90\xca\xcb\x5c\x7d\xec\x02\x00\xc2\x7a\xc6\xa5\x46\x52\x01\x5b\x78\x0d\x74\x31\x2f\x0d\x2d\x4b\xa4\x9d\x85\x3a\xcb\xfa\x2a\x61\x55\x46\xfe\xc2\x22\x8f\x3d\x87\x35\xbe\xc4\xe2\xa5\x73\xb2\x87\x53\xb1\x5f\xc2\xff\x2b\x6b\x14\x03\x88\xb4\x6c\x32\xf2\x7a\x85\xc9\x3a\x19\x14\x46\xcb\xca\xc5\x16\x62\x12\x2f\x1c\xed\x07\xa8\xac\x11\x95\x61\x8e\xfd\x09\x39\x81\x89\x0d\x6a\x14\xc8\xd8\x23\x9a\xc1\xdd\x3f\x93\xe6\xc0\xbd\xe1\x86\x91\xfb\xb5\x55\xa2\x76\xbf\x0b\x81\xd7\x7b\xe0\x83\x36\x9b\x35\x7b\xd2\x51\xc9\x0a\xa9\xa8\xc1\x29\x23\xb5\xac\xf1\x1c\x34\x41\x4c\x19\x59\x00\x30\x64\x2a\xbb\xf5\x54\x6a\xf6\x1d\x0f\x34\x66\x28\x38\x69\xb5\x92\xf5\x6e\x0e\x76\xf1\x29\x0c\x68\xcc\x93\x01\xae\xab\x24\xf1\x56\xa8\x31\x40\x7f\x40\xf7\x2a\x09\x89\xd5\x57\x74\x89\x75\xee\x8f\x36\x4a\x53\x48\xb2\x84\x67\x56\x92\xf3\xb2\x2c\x7b\xa7\xd9\x5e\x3e\x30\x65\x5d\xe3\xe3\x38\x80\xbe\xb3\x1c\x99\x0c\xf0\x0c\x75\x07\xbb\xa2\x81\x25\xfb\x82\xb0\x75\x62\x50\x84\x55\x62\x8a\x80\x3f\x4b\xd7\xc6\x8f\x4e\x0c\x68\x1c\x29\xa5\xa8\x94\x1e\x94\x70\x1b\xe4\x35\xb0\xed\xeb\xfb\xfd\x5a\x8e\xd9\xed\x58\x89\x16\xbf\x53\x5a\x9f\xd6\x89\xda\x36\x8a\x9d\x38\xe2\x87\xb9\x30\x3e\xe0\x7d\xcd\x7b\x18\x3c\x2e\x0e\x60\x45\x61\x50\xb5\xc0\x5f\x94\x1a\xfc\xb7\x42\x3e\x46\x4f\x19\x69\x0b\x25\x85\xf0\x01\x65\xd0\x94\x65\xa7\x0a\x46\xde\xcb\x92\x91\xcf\xca\x74\xe4\x4f\xac\x16\x72\x4e\x2a\x59\xcb\xb6\xa1\x05\x3b\x3a\x94\xf1\x66\xf2\xc4\x79\x48\x00\x8f\xb7\x10\x6e\xc9\x0c\x71\xf0\x29\xa8\x3d\xb2\xad\x95\x02\x9a\xf7\xf9\x87\x9b\x9b\xc5\xcd\xfa\xc8\x7c\x12\xbf\xf6\x67\xfa\x90\x1e\xe8\xa4\xd3\x29\x3a\x4a\xdb\x49\x16\xd9\x70\x0d\xfb\x1e\x15\x6d\x4e\x35\xaa\xc1\xe8\xea\x9b\x02\x44\x5e\x32\x4d\xb9\x68\x21\xe8\xb6\xab\x80\x21\x38\xe9\x8a\x4e\xb5\x06\xfa\x46\xf2\x5a\x33\x65\xf1\xec\xb4\x49\xde\xd3\x9c\x90\x0e\x26\x8d\x6b\xbb\x01\xf7\x0f\xf6\x9a\x90\xfd\x82\x6d\x35\xa6\x84\x30\x4c\xd7\xd4\x6d\x4b\x57\x8e\xbb\xf1\xdf\x90\x52\xe3\xce\x51\xc9\xdb\x46\x98\x1b\xc3\x56\x30\x9b\xfe\xbf\x5d\xab\xf9\xf6\x19\xe8\x06\x31\x9a\xb2\x16\x0c\x83\x35\x9a\xef\x41\x48\x21\x5e\xd4\x75\x37\x22\xf4\x6a\x5f\xac\xdb\x91\x49\xf3\x1b\x95\x5c\xe1\x28\xc9\x0c\x03\xbb\xaa\x3e\x58\x64\x06\xd9\xd3\x31\x99\x6d\x1f\xed\x55\xeb\x07\x23\x26\x04\x26\xf2\xae\x8e\xa0\x9e\x55\x1b\x8a\x3d\xd5\x30\xf2\xc1\x35\x0e\xfb\x46\x7c\xc7\x4b\x96\x53\x74\x68\xfc\x00\x7c\xf0\x8f\x76\x5a\x0e\xc2\x0e\x61\x78\xbd\x7a\x85\x6b\x40\xfa\xce\x2e\x34\xb2\xe5\x98\xb1\xbf\x35\x40\xa0\xc5\xfd\xf3\xf5\x60\xed\x20\xb3\x83\x6b\xe5\xc8\x79\x7a\xda\xa1\x83\xb7\x24\x36\x79\xa1\xa3\xa3\xe6\x7c\x28\xf5\x60\xeb\x5b\xd7\xf8\x0f\xbe\xe1\x4e\x04\x63\xeb\xe1\x14\xf3\xa6\x47\x01\xdc\x53\x6b\x6f\xc0\x46\x49\x16\x49\x52\xb5\x13\x41\x4f\xc5\x0b\x41\xc4\xb4\x30\x4e\xbf\x37\x84\xa6\xd4\xb2\x9c\x6d\xa5\xf2\x6a\xae\xd6\xb3\xd9\x10\x4d\x9a\xc3\x51\xe8\xb4\x0d\xde\x15\x26\x4d\x92\x57\x61\xd5\x53\x7f\xfa\x11\xac\xc8\x5d\x59\xf0\x94\x1c\x5d\xcb\xa2\x93\x43\xf2\x81\xb7\x3c\xe7\x82\x6b\x60\xe2\x9e\x97\x25\xab\x7b\x6c\x20\xca\xca\xb4\x47\x2a\xd8\x3f\x17\xc9\xe5\x40\x1e\x49\xc5\xed\xbc\x30\xee\x02\x4a\x86\xa0\x52\x21\xe0\xbe\x00\x90\x3a\xb7\xe6\x0b\xe5\x14\x26\x27\xa6\xe9\x0b\x48\x5a\xad\x10\xcf\x30\x1b\xfb\x2c\xd8\x74\x3a\xa9\x33\xf9\x99\xee\xd8\xe8\xd2\x95\x26\xc3\xa1\x1a\x05\x8c\xf6\x4a\xd9\x96\xab\x56\x47\xc5\x9e\x8b\x72\xfa\xd6\x36\x50\xc6\xe1\x16\xff\xc5\xb5\x60\xd3\xf3\x76\x30\x3c\x16\xf1\xc2\x0d\x0f\x54\x89\x11\xe1\xd0\x11\xd6\x19\x8f\x72\x2f\x54\xa8\xee\xa5\xf6\x56\x67\x9b\x47\xd8\x36\x2a\xfa\xe4\xbf\x02\x57\x49\x9f\x14\xfa\x41\x3b\xa1\x1f\xcf\xaf\xcd\x70\xa7\x99\x09\x0d\xad\x87\xad\x2c\x17\xb2\xb8\x0f\x37\xc5\x6d\x97\x9b\x20\x4e\xdf\x04\x82\x1b\xc5\x60\xe4\x6d\xdc\xc4\xb3\x29\x04\xf5\xeb\x4c\x7b\x2d\x80\x49\x83\x16\xdd\x4f\x18\xef\xb7\x77\x2a\x18\x5c\xe3\x94\x9d\x83\x76\x70\xa2\x77\xff\x8d\x7a\xf9\xa2\x8b\x41\xe7\xc8\xa5\x98\xfe\x2c\x3a\x00\xd8\x56\x86\xf6\x07\xff\xe1\xd6\x2b\x64\xd5\xb1\x3f\xdf\xa4\x8e\x43\xad\x61\x95\x8a\x31\x37\xfc\x07\x40\xfc\xae\x2e\xf6\x80\xa8\xbb\x94\xda\xe1\x62\x14\xf1\x2c\xb9\x55\x1b\x84\x34\x26\xcd\x99\x48\x43\xc5\x31\x9b\xa2\x85\x23\x7e\xaf\x90\xc4\xe9\x0a\x75\x6e\xe1\x1b\xd1\x31\xb0\xef\x40\x3d\x7b\x7e\x31\x7f\x08\xa0\xe6\x2a\xc5\x58\x0d\x1f\x91\x25\xb9\x08\x58\xb6\x31\x47\xe7\x12\x55\x87\x1f\xcd\x13\x7f\x7e\x58\xfa\xc3\x67\xd6\x46\xd7\xb9\x49\x40\xbf\x99\x0f\xfd\xa3\xa1\x7e\x7a\x5c\x9b\xb5\xa3\x96\x8a\x06\xfa\x81\x77\x6a\xb4\x1c\x77\x09\x1f\xd2\xe1\xee\xed\xe8\xe5\x04\x97\xc3\xe0\xfc\xa0\x1d\xb9\x7f\xd1\xc2\xb7\xb3\xff\x03\x00\x00\xff\xff\x1e\xf9\xb3\xcc\xea\x11\x00\x00")

func cssIndexCssBytes() ([]byte, error) {
	return bindataRead(
		_cssIndexCss,
		"css/index.css",
	)
}

func cssIndexCss() (*asset, error) {
	bytes, err := cssIndexCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/index.css", size: 4586, mode: os.FileMode(420), modTime: time.Unix(1505954166, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsIndexJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6f\xda\x40\x10\xbd\xfb\x57\x4c\xd5\x83\x6d\x52\x2d\x9c\xdb\x12\x89\x44\x39\x44\x6a\x7b\x28\x52\x2f\x08\x89\x65\x3d\xe0\x15\xeb\x1d\xba\x5e\x83\x50\x95\xff\xde\xd9\x0f\x42\x83\xa8\x82\x64\xb4\xb6\xdf\xbc\x79\xef\xcd\x78\x3c\x1a\x15\x30\x82\x39\xfa\x61\x2f\xf8\x34\x2e\x0a\x45\xb6\xf7\xa0\x3d\x76\x3d\x4c\xa1\x21\x35\x74\x68\xbd\xf8\x3d\xa0\x3b\xcd\xd1\xa0\xf2\xe4\x66\xc6\x54\xe5\x42\x37\xcb\xb2\xce\x78\xa3\xed\xee\x1d\xbc\xf8\x8e\x76\x00\xc9\x25\x45\x6e\xfb\xd8\xa2\xda\x81\xde\xc0\x0a\xcd\x0a\x74\x0f\x34\xf8\x74\x6d\xe0\xa0\xf1\x98\x15\x6d\x06\xab\xbc\x26\xcb\x88\x07\x34\x74\x9c\x2b\x47\x4c\x88\xa6\x86\x3f\x05\x80\x63\xf1\xce\x02\x1a\xb1\x45\xff\x40\x83\x6d\xb4\xdd\x3e\x1a\xcd\x2a\x7e\x72\xf7\xaa\x16\x6b\xf2\x9e\x3a\xb8\x87\x49\xf1\xf2\xda\x7c\xc6\x9c\x07\xe9\x31\x5a\x85\x95\x5e\x5d\x77\x93\x19\xf0\xcc\xef\x2b\x9d\x7a\x45\x9b\x62\x43\xee\x49\xaa\xb6\x42\x98\xde\x03\x0a\x65\x64\xdf\x7f\xd3\xbd\x17\x0e\x3b\x3a\x60\x55\xc6\x52\x2c\xeb\xfa\x5c\xb2\xd0\xcb\x7f\x60\xb2\x69\x2e\x98\x5b\x92\x7c\x8b\xa0\xc8\x39\x96\x0f\x5d\x48\x2d\x6a\xe4\xb6\xe1\x4d\x40\x72\xe8\x9e\xfd\xf5\xa0\x6d\x04\x87\xb4\xf6\xe4\xfc\xff\x3c\x54\x59\x3e\xf2\x64\x79\x4a\x93\x82\x6f\x02\x5d\xf5\x85\xef\xbf\xa6\x69\x0b\x83\x76\xeb\x5b\x7e\x72\x77\x97\xe0\x10\x66\x53\xbd\x4d\x3d\x42\xd9\x4e\x7d\x86\x00\xac\x1d\xca\x5d\x3c\xbf\x14\xe1\xe2\xbf\xab\xec\x6e\x79\xec\x23\x1f\xf4\xfb\x13\x3b\xe0\x89\x9d\xb2\xf6\xa3\xb6\x0d\x1d\x43\x46\x4f\x07\xb6\x18\x02\x43\x8b\xae\x2a\x53\x41\xf9\x09\x62\xec\x17\x67\x97\x7d\x9a\x35\x0d\xf4\x1d\x91\x6f\x33\x3b\xd3\xbe\xc7\xaa\x8c\x56\xbb\x33\x69\x70\x94\xf6\x19\x0d\xc7\x84\xc2\x4b\xc7\x4b\x15\x1c\x8d\xc7\x79\xc7\xc9\x9a\x53\x91\x92\xe1\x95\xb3\xd4\xe0\x0f\xd9\x21\x7c\x98\x42\x39\x2b\xeb\xbc\x8d\xb9\x62\x70\xe6\x95\x91\xcf\x81\x32\x6e\xe9\xcc\x7b\xa7\xd7\x03\xab\x2f\x5b\x87\x9b\xf0\x49\x44\xbc\xb4\xaa\x25\xf7\xa6\x07\x97\x2d\x26\xcb\x48\xff\xf1\x9a\x3e\x99\xcc\x3f\x7e\x74\xfb\xe3\x0b\x14\xb5\x48\xd8\x67\xeb\xe9\x17\xef\x4a\x95\x66\xb7\xc6\x56\x1e\x34\xb9\xcf\x50\xa6\xdc\xca\x30\x40\x1e\x57\x5d\xfc\x0d\x00\x00\xff\xff\x79\x82\x0e\x63\x1a\x04\x00\x00")

func jsIndexJsBytes() ([]byte, error) {
	return bindataRead(
		_jsIndexJs,
		"js/index.js",
	)
}

func jsIndexJs() (*asset, error) {
	bytes, err := jsIndexJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/index.js", size: 1050, mode: os.FileMode(420), modTime: time.Unix(1504199128, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsSmoothscrollJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x73\xdb\xb8\x11\x7f\xf7\xa7\xd8\xbc\x9c\xa4\x9c\x42\xd9\x6d\xef\xa6\x23\x55\x6d\x4f\x89\x5a\xbb\xb5\xa3\x1b\x4b\x93\xda\xd3\xb9\xe9\xd0\x22\x24\xe1\x42\x11\x3a\x12\xd4\x9f\x89\x7d\x9f\xbd\x8b\xbf\x04\x40\xd2\x39\x4f\x33\x93\x97\xe6\xc5\x04\x76\xb1\xd8\x5d\xfc\x76\xb1\x58\x65\xf0\xfa\x0c\x5e\x43\xb1\x65\x8c\x6f\x8a\x65\xce\xd2\x14\x76\x2c\x3d\xad\x28\x7e\xbc\x81\xfd\x79\xf4\xfb\xe8\x3b\xc1\xb1\xe1\x7c\x57\x0c\x07\x03\x1a\x6f\x93\xb2\xe0\x71\x16\xad\x29\xdf\x94\x0f\x11\x65\x03\x77\xb5\xe0\xfd\xdd\xf9\xc5\xf7\xd0\x5d\xf6\xe0\x9d\xe4\x84\x7f\xc6\x05\x27\x59\x1f\xfe\x41\x72\xb2\xa5\x71\x01\x37\x24\xa3\xcb\x0d\x49\x53\x8a\x7b\xdc\x5c\x2d\xe0\x9a\x2e\x49\x56\x10\x5c\x3c\x38\x3b\xeb\xae\xca\x6c\xc9\x29\xcb\xba\x87\x3e\x24\x7d\x28\xb3\x84\xac\x68\x46\x92\x1e\x7c\x3a\x03\xe8\x94\x05\x81\x82\xe7\x74\xc9\x3b\xa3\x33\x9c\x10\x26\x00\x6e\x1b\xa7\x28\x9b\x14\x6a\x70\x18\xc2\x81\x66\x09\x3b\xc0\x3a\x65\x0f\x71\x0a\xec\xe1\x67\xb2\xe4\x8a\x98\x0c\x21\x61\xcb\x72\x4b\x32\x3d\x61\xb7\x18\x56\x9f\x92\x32\x90\x1b\x0c\xac\x4f\x70\x64\xb4\xb3\x73\x5d\xa5\x97\xe4\xcb\x09\x2f\xf3\x0c\x0e\x1b\x92\x81\x72\xc8\x84\x6c\xe2\x3d\x65\x39\xd0\x8c\x93\x7c\x15\x2f\x09\xd0\x02\x8a\x72\xb7\x63\x39\x57\xbb\x00\x5d\x41\xb7\xe3\xb3\x77\x90\x1f\x92\xc8\xa8\x39\x4d\x89\xf8\x13\x15\xfc\x94\x12\xb3\x1f\xe8\xed\x46\x72\xf4\x74\xa6\x94\x78\xad\x68\xaf\xb5\xe1\x85\x1e\x0e\xe4\xdf\x7d\x9c\x83\x96\x05\x63\x38\x44\x97\x8b\x9b\x6b\x33\x7e\x7c\xc4\x09\x3d\x18\x59\xee\xf9\xdb\xdb\xd9\xf5\xf5\x7f\x16\x57\x37\x53\x5c\xf1\x87\xef\xff\x38\x0a\xf7\x51\x9e\x85\x75\xcc\x37\x24\xa7\xd9\x1a\x58\x4e\xd7\x34\x43\x9f\x6b\x40\x6d\x09\xdf\xb0\xa4\xae\x88\xe5\x1b\x5b\x83\xd4\x0a\x3c\xbb\x48\xaf\x95\x4a\xa9\xef\x05\xeb\x7b\x5c\x93\x53\xc5\x37\x39\x19\x1a\x49\xe7\x5a\x86\xf1\xd9\x2e\x67\x9c\xf1\xd3\x8e\x38\x32\xd5\x97\xe6\xf0\xc5\x5e\x65\x9c\x7d\xa0\xe4\xd0\x2e\xc0\x70\x28\xb7\xd7\xfc\xa1\xf0\x03\x9c\x6e\x85\x33\x94\xf1\x35\xdb\x33\x44\xa6\x38\x80\x1d\x62\x82\xe5\xdb\x38\x43\x5c\x7c\xf3\x8d\x3f\x11\x21\x93\x56\xed\x2f\x75\x4a\xf4\x80\xf8\xee\x7a\xd3\x3d\x18\xc2\xbb\x98\x4b\xb2\x55\xcb\xea\xb5\xdc\xc4\xd9\x9a\x14\x60\xc3\xbc\xa0\x12\xc7\x34\x2b\x68\x42\x00\x03\x95\x28\x83\xcd\x82\xbf\x2a\xdd\x7d\x67\x59\xe2\x2e\xce\xe3\x2d\x7c\x7a\x5f\x6e\x1f\x48\xfe\x04\xc7\x36\xc2\xc9\xb3\xdd\x46\x8f\x27\xb4\x7b\xec\xc3\xa9\x82\x35\xdf\xd0\x42\xfb\xfa\x9a\xac\x04\x52\x8f\xa3\x3a\x69\xc1\x76\x48\x39\x05\xe8\xb7\xe6\xaa\xd8\x28\xf0\x6f\x51\xa6\x1c\xd8\x0a\xe2\xdd\x2e\x3d\x89\x33\x21\x98\x27\x60\x8b\x78\xad\xd4\xe1\x0c\x62\xc8\xa4\xca\xa1\xf9\x82\xbb\xcd\xb8\x8f\x96\x60\xb6\x33\xa4\x66\xab\x85\xac\xee\xc7\x30\x80\xe1\x3c\xfa\x0e\x65\x74\x2f\x44\x3a\x44\xb5\xa2\x25\x2b\xba\xf2\xe3\xc7\x2b\x9c\xff\xd8\xeb\xb5\x19\x89\x10\xa0\x4b\x3c\xf1\x42\xe4\x90\x58\xe7\x71\x78\x30\x39\xa7\xd8\xb0\x32\x4d\x70\x2c\x6d\xa7\x24\xa9\x1d\xad\x64\x98\xc4\x34\x9d\x95\x2d\x47\xfb\x38\x93\xf1\xed\x9e\xb0\xb5\x75\xc2\x58\x4a\xe2\xac\xc5\x58\x4f\x78\xf7\x58\x59\x2d\xf2\x9d\x88\x27\x3c\x93\x23\xbc\x1a\x8f\xa1\xa3\x72\x48\x47\xd3\xd5\x3f\x0c\xd3\x23\x8c\x91\x9a\x95\x32\xf1\xfa\x94\xc8\x1a\x29\x58\xbc\xac\xfd\x0c\x5f\x27\x2e\x39\xab\x6f\x13\x30\x61\x44\xe0\xbd\xc5\x3b\x95\xc6\x32\xb9\xaf\x68\x5e\x70\x88\xf3\x35\x46\x2f\x17\xf1\xa2\xb4\x1e\x78\xfa\x21\x1f\x8a\xb1\xf2\x30\xd7\x8b\x2d\xfb\xa0\x65\x0a\x62\x5d\x59\x0d\x03\x9e\x97\xc4\x00\x5d\x9f\x75\xe0\xac\x71\x9b\xb3\x30\x77\x84\x56\x28\x30\xb4\x1a\x21\xef\x15\xa9\x9f\x31\x04\xbf\x12\x4f\x73\x25\x21\xd4\x72\x85\x97\x4a\x5d\x4d\x14\xcd\x37\x39\x66\x35\x92\xe7\xb8\x5a\xde\x80\xae\x2c\xe1\x32\xff\xd6\x03\xbd\x20\x23\x07\x58\xa0\x81\x53\xb1\xb0\xdb\xb1\x8b\xc4\x8a\x3d\x5e\xea\x49\xa7\x15\xfe\xe8\xc5\xc4\x24\xb4\xf8\x21\x25\x80\xc8\x15\x56\x89\x60\x6f\x4d\x67\x62\xd1\xdc\x2e\xf9\x51\xae\xa8\x41\x9f\x25\xe4\x09\x05\x34\x84\xb7\x4f\x09\x20\xdf\x24\xbb\x4b\xd2\xea\x0c\x44\xee\xa7\xc5\x84\x25\xa7\x91\x33\xb3\x89\x8b\x6a\xd5\x7c\x87\x45\x42\x40\xfd\x40\x0b\x8a\xa4\xd9\x1e\x93\x7d\x6a\x93\x3b\x60\x19\xe3\x9c\x2e\x11\x37\x29\x49\x23\xe5\x04\xa1\xa8\xe5\x93\xe7\x53\x10\x0e\x4b\x86\x19\x43\xaa\x8a\x92\xa9\xd8\xae\xb0\x2c\x4a\x2f\x29\x43\x22\x28\x89\x1e\x1c\x3d\xa1\x41\x4b\x18\x3b\x20\xc4\x9d\x97\x98\x63\x32\x7e\x49\xe8\x7a\xc3\xe1\x4f\x62\x46\x9d\x8d\x9e\x79\x7c\x6c\x62\xff\x17\x4d\x30\x67\x39\xdc\x72\xc2\xdb\x36\x30\xdf\xdb\xf6\x10\xad\x09\x7f\xcb\xb6\xbb\x12\x81\x35\x17\xf5\x11\x3a\xbc\x2f\x93\x46\x2f\x62\x76\x85\x88\x88\xbd\x12\xd3\xb1\xe0\x45\x98\x52\x44\x4d\xf7\x95\x36\x1d\xa3\xe8\x55\xb7\xc1\x4c\x31\x5f\x57\x43\xa4\xe5\xb3\xc0\x75\x4d\x3e\x6a\xb4\x40\x2a\x68\xd7\xeb\xd0\x22\x69\x1b\xd2\x0b\x92\xae\x30\x87\xec\xd9\x47\x92\x38\xb7\xd6\x26\xe6\x7d\x58\xd3\x3d\x06\x5b\x2c\xce\x96\x93\x23\x4e\x60\xb9\xbd\x2b\x64\x74\x95\xeb\x8d\x0e\x0f\xbc\xf7\x6a\xc9\x1f\xd9\x42\xe0\x9b\x64\xaf\x65\xb5\x24\x76\x5c\xd8\xd5\x1c\x3e\xb4\xb1\xe8\x11\x06\x63\xfd\xd1\xed\xb9\x10\xc6\x38\x2e\x3d\x4c\x2f\xcb\x5c\x80\xf4\xae\x61\xee\xde\x9d\x23\x69\xbc\x2b\xd0\xe4\x31\x26\x41\x21\xfb\x8d\xd1\x0c\x4b\xe1\x38\xe7\x0b\x9c\xeb\xc1\xc0\xad\x52\x47\x4e\x46\x8a\xf7\x8c\x26\x56\x86\x10\x50\xc0\x06\xa1\x48\x72\xe1\x3a\xcc\x7b\x19\xb1\x65\xa3\xd9\xc7\x7c\xfd\x19\x2e\xb0\xec\xba\xc0\x92\x4a\xcf\x78\x82\x45\x29\x21\x6e\x73\x51\x4e\x60\xed\xe0\x6e\x61\xb5\x47\x93\x85\x3c\x71\xe5\x6b\x7a\x05\x18\x63\x3f\x32\x78\x06\xdd\xc1\xb7\x60\x5c\x1b\x1d\x43\x73\xef\x7a\x78\x54\x9e\x2f\x8d\xcf\x42\x39\xf7\xae\x9c\x53\x28\xe7\xde\x91\x63\x04\x69\xba\xc2\x46\xb4\x8c\xf1\x61\x63\xd7\x58\x44\xf7\xad\xe2\xf6\xeb\xbe\xe7\x3a\xc6\x94\xfc\x2c\x27\xe2\xe6\x3a\x10\x04\xff\x9e\xc8\x5c\x9e\x93\x18\x1f\x7d\x09\xb0\x32\xc7\x1a\xb9\xe0\x58\xfa\x0b\x34\x39\xd7\x9c\x75\x8a\xa8\x09\x2a\x27\xe0\x0d\x6d\xcd\x74\x29\x27\xf7\x6a\x3b\x44\x39\xf9\xa5\x44\xb1\x3f\x64\x74\x2b\x05\xff\x0d\x01\x4d\xba\x02\xab\xba\x54\xee\x9b\x95\xbd\x5e\x75\x7d\xb5\x84\x9b\x34\xa3\x30\x6f\xc8\x03\xbe\x75\xeb\xe5\x55\x2d\x9e\x24\x79\xae\xdf\xc1\x4d\x71\xf5\x58\xbb\x57\xfe\xd7\x2a\xda\xd9\x52\xa6\x3d\xbf\x90\x16\x11\x54\x1d\x9e\x1b\x57\x0a\x4e\xb5\x19\x2f\xf6\x94\x59\x35\x9e\x85\x17\xe3\xd5\xd1\xeb\x77\x8f\x46\x80\x97\x40\xe4\xe9\x7a\xb7\x8a\x7b\x74\xce\xfd\x8d\x4f\xa2\x2a\xf1\xeb\x80\x18\xdb\x57\xde\x9d\x7a\x0e\xee\xe2\x35\xb9\x9b\xad\x56\x78\x9f\x05\xcc\xf7\x0e\xf3\x7d\xc5\x7c\x1f\x32\xeb\x03\x1b\xdb\x27\xa8\x5e\x53\x5d\x0c\x04\x6b\x9c\x36\x15\x49\xda\xa0\xa3\xbd\xbd\xc4\x8b\xa5\x41\x2d\x4b\xc7\x67\x4b\x83\x22\xde\x73\xa8\xa9\xb8\xd2\x6e\x4d\x19\xdb\xc9\x37\x36\x5e\x24\x88\xc8\x95\xc0\xb8\x79\xbe\x8a\xac\xdc\xa4\xf2\xd0\xf9\xee\x07\x5b\x0f\xf5\xdf\xbe\xaf\xb1\x38\xe3\x61\xf5\x19\x50\xef\x34\xe9\x2e\x98\xbf\xd7\xf3\xf7\xd5\xfc\x71\x88\x90\xb4\x23\x7c\xb1\x9f\x8c\x6d\x61\x51\x67\x90\x3f\xbb\xbd\xfa\xfb\xd5\xfb\x1f\xae\xe1\x66\xba\xb8\x9c\xbd\x9b\xc3\xec\xc3\xf4\xf6\xf6\xea\xdd\x74\x6e\x43\xe0\x4c\xfb\xc4\x76\x09\x44\xe1\x5a\xb5\x09\x24\xd9\xd2\xc6\x0e\x05\x07\xb6\xb9\x54\x21\xd0\x5e\x14\xe1\xf3\x09\x51\xab\x12\xd7\x2f\x25\xcd\x6d\xd5\x2a\xb0\xec\x3f\x6d\x4c\x35\x5d\xfc\xfb\xfc\xa7\x9e\x8b\xec\x00\x5e\x2a\xab\xba\xb5\x4b\xdf\x19\xb8\x52\xa2\x54\xbc\x7b\x11\xc0\xee\x64\x2b\x33\xc7\x97\xb0\xc7\x7b\xf1\x93\x65\xed\x8d\x82\xfa\xbd\x09\x5c\xd7\xd3\x05\x2c\x2e\xa7\x30\xbf\x99\xcd\x16\x97\xef\xa7\xf3\x39\x4c\xa6\x78\x0a\xaf\x0c\xb4\x9c\x34\x13\x18\xe1\x98\xa0\x22\xbb\x1a\xff\xfa\x6b\xcd\xa4\x56\x22\x9a\x70\xe6\x29\x6c\xfb\x2a\x03\xa7\xc9\xe3\x9d\xec\xe4\xf4\x95\x8f\x73\x72\xfa\xff\x81\x8a\x32\xa3\x3d\x3d\xf7\x9e\x3b\x6f\x77\x69\x3d\x59\xf7\x5a\xe1\xd0\xda\xd7\x13\x59\xa0\x8d\xa8\xb3\x42\xeb\xda\xf1\x33\x2b\xbf\x1a\xcc\x4c\x2f\xb3\x06\x33\xd5\x07\xeb\x7b\x33\x2f\x42\xdb\x17\xc5\x9b\xa8\x0c\x52\xd5\xa7\xab\x29\xe1\x56\x0f\x5c\x36\xec\xc2\x8d\x47\x5f\x06\xb6\x75\x97\xd4\xc6\xaa\x89\xa2\x34\x15\xcf\x41\xd5\xee\xeb\x60\x95\x2f\xe7\x86\x61\xdf\xb1\x61\xb1\x34\xc1\x5f\x2b\xa6\x86\x41\x5f\xf2\xc5\xd8\xd5\xa9\xad\x9d\xdc\x8c\x41\xe1\x55\xf4\xe7\x79\xe0\xd6\x51\x43\xef\x48\xb1\x39\xed\x23\x17\x71\x8e\xf6\x4e\x05\x01\xd2\x2f\x43\xb9\xd4\x04\xfb\x73\x2e\x62\x3b\xcd\xab\x82\xdb\x77\x89\xcb\x69\x42\x45\xb3\xfb\xf5\x34\x54\xb5\x41\x43\x21\xe6\x6a\x1a\x9c\xb5\xdb\x31\xfe\x56\x4a\x0e\xd1\xe0\x34\x8e\xbf\xfd\x0c\xd8\x9f\x7e\xeb\xc9\x79\x3f\x06\x7c\x8e\xe9\x2b\x5f\x58\x46\x8d\xcf\x86\x8e\x2b\xd0\xef\xaf\x0a\xc0\xe7\xf8\xae\x1d\x7a\x3c\x5f\xf6\x72\xf2\x5f\x2d\xaa\x89\x26\x3c\xd7\xd4\x5b\x13\x9a\x7b\x9d\x06\xd5\xfc\xba\x45\x84\x17\xb6\xac\xae\xf8\x45\xaf\x68\xc2\xd0\x1a\xac\xa1\xdf\xca\xee\x93\xe0\xf4\x7b\x15\x4b\x3b\x2f\x24\x48\xdc\xb4\xae\x72\x8f\x24\xd4\xf8\x55\xe3\x63\x47\xfe\x48\xb8\x27\x71\x6a\xda\x93\xe6\xf7\x97\x9d\xd3\x88\x84\x17\xa6\xba\x70\xef\xe7\x68\x7e\x98\x38\xc6\xaa\x10\x7f\xe3\x7a\x30\xa8\xd9\x5a\x85\xa9\x88\x72\x65\x89\x14\xe0\x8b\xaa\x2a\x3c\x0f\x26\x95\x3f\x74\xef\x96\x66\xb0\x47\x8c\x8a\x46\x71\x55\x93\xd8\x3c\xd8\x90\x9e\x9e\xd3\x57\xe6\xa4\x40\x8b\xe6\x4c\x64\xda\xe5\xbf\x25\x09\x35\x9d\xe1\x0b\x95\x0e\xfd\x5e\x53\x3a\x70\xe6\xcb\x95\x36\x09\x4c\xc7\x9e\x73\x15\x90\xa3\xd0\xb3\x68\xbc\x0d\xd0\xb4\x25\xdb\x6e\x59\xf6\xb3\xea\x0b\x6f\x59\x52\xa6\x24\xb2\x4b\xe0\x93\xfd\xdd\x7b\x58\xfd\x4f\x01\xb5\x8d\xeb\x26\x94\xa3\x7e\x7f\x96\xa3\xea\xa7\x72\xa5\xcf\x53\xaf\xab\x3a\x2b\x7d\xfb\x43\x3c\x52\xfe\x1b\x00\x00\xff\xff\x13\x45\xe8\xd6\x8c\x20\x00\x00")

func jsSmoothscrollJsBytes() ([]byte, error) {
	return bindataRead(
		_jsSmoothscrollJs,
		"js/smoothscroll.js",
	)
}

func jsSmoothscrollJs() (*asset, error) {
	bytes, err := jsSmoothscrollJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/smoothscroll.js", size: 8332, mode: os.FileMode(420), modTime: time.Unix(1504199128, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xd4\x30\x10\xbd\xf3\x15\xc6\x5c\xc9\x46\xbd\x71\xb0\x7b\x59\x40\x5c\x10\x95\x5a\x09\x71\xf4\xda\xd3\xb5\x8b\xe3\x84\x78\xb2\xbb\x55\xc9\xbf\xe3\xc4\x1b\xc9\x76\x02\xf4\xb4\x33\x7a\xef\x8d\xe7\x3d\xc7\xcb\xde\x7e\xfc\xb6\x7f\xf8\x71\xf7\x89\x68\x6c\xec\xed\x1b\x16\x7f\x08\x61\x1a\x84\x9a\x8a\x50\x36\x80\x82\x48\x2d\x7a\x0f\xc8\xe9\x80\x8f\xd5\x07\x9a\x42\x1a\xb1\xab\xe0\xd7\x60\x4e\x9c\x5e\xaa\x41\x54\xb2\x6d\x3a\x81\xe6\x60\x81\x12\xd9\x3a\x04\x17\x74\x06\x38\xa8\x23\x64\x4a\x27\x1a\xe0\xf4\x64\xe0\xdc\xb5\x3d\x26\xe4\xb3\x51\xa8\xb9\x82\x93\x91\x50\xcd\xcd\x7b\x62\x9c\x41\x23\x6c\xe5\xa5\xb0\xc0\x6f\x96\x41\x68\xd0\xc2\xed\xcb\xcb\xee\x61\x2a\xc6\x91\xfc\x26\xa1\xb9\x1f\x0e\x18\x7b\x56\x47\x46\x64\x5b\xe3\x7e\x92\x1e\x2c\xa7\x1e\x9f\x2d\x78\x0d\x10\xce\xd5\x3d\x3c\x72\x8a\x1a\x1a\xa8\x45\x07\x97\x5a\x7a\x5f\x1b\xa7\xe0\xb2\x0b\xd5\x7c\x12\xab\x97\x44\xd8\xa1\x55\xcf\xd7\x71\xca\x9c\x88\xb4\xc2\x7b\x4e\xbf\xf7\xa2\xeb\xa0\xbf\xae\x95\x63\xfb\xe0\x4b\x18\x97\xa0\x39\xfe\x25\x8c\xce\xc0\x1c\x9e\x9d\x11\x19\x92\x29\x48\x81\xe6\x3b\xe1\x16\x1e\xc2\x05\x69\x12\x05\xab\x27\xf4\x1f\x02\x1f\x52\x5a\x34\x69\x62\xa5\x8c\xd5\x61\x9b\x64\xf5\xd8\x6e\x5a\xd9\xc7\x2b\xac\xce\x45\x1c\x25\xef\xde\x28\x38\x88\x95\x9d\x84\xf1\x15\xdc\x50\xc0\x24\x5c\x6d\x2f\xdc\x11\xc8\xee\x4e\x1c\xc1\x8f\x63\x01\xe7\x13\x0c\x42\xb3\x9a\x30\x93\xc4\xf5\xca\xdf\x4d\xc6\xed\x70\x1c\xc7\x3c\x37\xb1\x56\x15\x19\x2c\xeb\x80\x53\xc5\x16\x2b\x62\x19\xd7\x66\x60\xc5\x9e\xff\xf1\x99\x0e\x98\x18\x94\x18\xc5\x69\x62\x66\xbd\xbe\xbe\xc9\x1c\x86\x76\xc5\x09\xf8\x75\x9b\xf5\x81\x6b\xf7\x9b\xde\x93\xbd\x3e\xb7\xed\xfc\xbd\x6e\x48\x99\x97\xbd\xe9\x90\xf8\x5e\x66\xcf\xee\xc9\xd7\xbe\x09\x32\x1d\xf0\xd6\xda\xdd\x93\x9f\xe4\x91\xfc\xea\x09\xf1\xdd\xfe\x4d\xba\xfd\x29\x67\x25\xab\xe3\x0b\x0f\x21\xcd\xff\x86\x7f\x02\x00\x00\xff\xff\x91\x39\x2f\x9b\x25\x05\x00\x00")

func viewsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_viewsIndexHtml,
		"views/index.html",
	)
}

func viewsIndexHtml() (*asset, error) {
	bytes, err := viewsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "views/index.html", size: 1317, mode: os.FileMode(420), modTime: time.Unix(1504741248, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"css/index.css": cssIndexCss,
	"js/index.js": jsIndexJs,
	"js/smoothscroll.js": jsSmoothscrollJs,
	"views/index.html": viewsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"css": &bintree{nil, map[string]*bintree{
		"index.css": &bintree{cssIndexCss, map[string]*bintree{}},
	}},
	"js": &bintree{nil, map[string]*bintree{
		"index.js": &bintree{jsIndexJs, map[string]*bintree{}},
		"smoothscroll.js": &bintree{jsSmoothscrollJs, map[string]*bintree{}},
	}},
	"views": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{viewsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

